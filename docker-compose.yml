version: '3'

volumes:
    dynamodb_data: {}

services:
  # DynamoDB
  dynamodb:
    image: cnadiminti/dynamodb-local:latest
    volumes:
      - ./dynamodb_data/:/dynamodb_local_db
    ports:
      - 8000:8000
    restart: always

  # Init DynamoDB
  init-dynamodb:
    image: garland/aws-cli-docker
    command: "aws dynamodb create-table --table-name pages --attribute-definitions AttributeName=id,AttributeType=S --key-schema AttributeName=id,KeyType=HASH --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=1 --endpoint-url http://dynamodb:8000"
    environment:
      - AWS_ACCESS_KEY_ID=0
      - AWS_SECRET_ACCESS_KEY=0
      - AWS_DEFAULT_REGION=localhost
    depends_on:
      - dynamodb

  # Apps
  admin:
    build: .
    command: node src/app-admin
    environment:
      IS_OFFLINE: "true"
      PAGES_TABLE: pages
      GITHUB_CLIENT_ID: client-id
      GITHUB_CLIENT_SECRET: client-secret
      GITHUB_OAUTH_REDIRECT_URI: http://localhost:3000:/admin/github/authorize/callback
    ports:
      - "3000:3000"
    restart: always
    depends_on:
      - init-dynamodb
  api:
    build: .
    command: node src/app-api
    environment:
      IS_OFFLINE: "true"
      PAGES_TABLE: pages
    ports:
      - "3001:3000"
    restart: always
    depends_on:
      - init-dynamodb
  web:
    build: .
    command: node src/app-web
    environment:
      IS_OFFLINE: "true"
      PAGES_TABLE: pages
    ports:
      - "3002:3000"
    restart: always
    depends_on:
      - init-dynamodb
